trigger:
- develop
- master
- release/*
- hotfix/*

pr:
- develop
- release/*
- hotfix/*

jobs:
# Build
- job: Build
  pool:
    vmImage: 'windows-2022'
  steps:
  - powershell: ./build.ps1
    displayName: 'Cake Build'
  - publish: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    artifact: NuGet Package
    displayName: 'Publish NuGet package as build artifact'
# Integration Tests Windows Server 2019 (.NET Core tool)
- job: Test_Windows_2019_DotNetCoreTool
  displayName: Integration Tests Windows Server 2019 (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install NodeJs 18.x'
  - powershell: choco install markdownlint-cli --no-progress
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - powershell: ./build.ps1 --verbosity=diagnostic
    workingDirectory: ./tests/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/output/report.html
    artifact: Integration Tests Windows Server 2019 (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests Windows Server 2022 (.NET Core tool)
- job: Test_Windows_2022_DotNetCoreTool
  displayName: Integration Tests Windows Server 2022 (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install NodeJs 18.x'
  - powershell: choco install markdownlint-cli --no-progress
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - powershell: ./build.ps1 --verbosity=diagnostic
    workingDirectory: ./tests/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/output/report.html
    artifact: Integration Tests Windows Server 2022 (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests macOS 11 (.NET Core tool)
- job: Test_macOS_11_DotNetCoreTool
  displayName: Integration Tests macOS 11 (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'macOS-11'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install NodeJs 18.x'
  - bash: |
      npm install -g markdownlint-cli
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - powershell: ./build.ps1 --verbosity=diagnostic
    workingDirectory: ./tests/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/output/report.html
    artifact: Integration Tests macOS 11 (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests macOS 12 (.NET Core tool)
- job: Test_macOS_12_DotNetCoreTool
  displayName: Integration Tests macOS 12 (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'macOS-12'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install NodeJs 18.x'
  - bash: |
      npm install -g markdownlint-cli
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - powershell: ./build.ps1 --verbosity=diagnostic
    workingDirectory: ./tests/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/output/report.html
    artifact: Integration Tests macOS 12 (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests Ubuntu 18.04 (.NET Core tool)
- job: Test_ubuntu_18_04_DotNetCoreTool
  displayName: Integration Tests Ubuntu 18.04 (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install NodeJs 16.x'
  - bash: |
      npm install -g markdownlint-cli
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - powershell: ./build.ps1 --verbosity=diagnostic
    workingDirectory: ./tests/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/output/report.html
    artifact: Integration Tests Ubuntu 18.04 (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests Ubuntu 20.04 (.NET Core tool)
- job: Test_ubuntu_20_04_DotNetCoreTool
  displayName: Integration Tests Ubuntu 20.04 (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install NodeJs 18.x'
  - bash: |
      npm install -g markdownlint-cli
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - powershell: ./build.ps1 --verbosity=diagnostic
    workingDirectory: ./tests/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/output/report.html
    artifact: Integration Tests Ubuntu 20.04 (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
